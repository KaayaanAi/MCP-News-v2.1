services:
  crypto-news-analyzer:
    build: .
    container_name: crypto-news-analyzer
    ports:
      - "5000:5000"
    env_file:
      - .env
    environment:
      - PORT=5000
      - NODE_ENV=production
      - MONGODB_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/crypto_news
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - kaayaan-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); http.get('http://localhost:5000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongodb:
    image: mongo:7.0
    container_name: crypto-mongodb
    # ports:
    #   - "27017:27017"  # Removed for security - only accessible internally
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=crypto_news
    volumes:
      - mongodb_data:/data/db
    networks:
      - kaayaan-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

volumes:
  mongodb_data:

networks:
  kaayaan-network:
    driver: bridge